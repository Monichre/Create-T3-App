generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Post {
  id          Int      @id @default(autoincrement())
  name        String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt
  createdById String
  createdBy   User     @relation(fields: [createdById], references: [id])

  @@index([name])
}

model Account {
  id                       String  @id @default(cuid())
  userId                   String
  type                     String
  provider                 String
  providerAccountId        String
  refresh_token            String?
  access_token             String?
  expires_at               Int?
  token_type               String?
  scope                    String?
  id_token                 String?
  session_state            String?
  refresh_token_expires_in Int?
  user                     User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  posts         Post[]
  sessions      Session[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model event_subject_matter_experts {
  id                    String     @id @db.VarChar(255)
  event                 String?    @db.VarChar(255)
  subject_matter_expert String?    @db.VarChar(255)
  events                events?    @relation(fields: [event], references: [id], onDelete: NoAction, onUpdate: NoAction)
  personnel             personnel? @relation(fields: [subject_matter_expert], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model event_topic_subject_matter_experts {
  id                    String     @id @db.VarChar(255)
  event                 String?    @db.VarChar(255)
  topic                 String?    @db.VarChar(255)
  subject_matter_expert String?    @db.VarChar(255)
  events                events?    @relation(fields: [event], references: [id], onDelete: NoAction, onUpdate: NoAction)
  personnel             personnel? @relation(fields: [subject_matter_expert], references: [id], onDelete: NoAction, onUpdate: NoAction)
  topics                topics?    @relation(fields: [topic], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model events {
  id                                 String                               @id @db.VarChar(255)
  name                               String?
  description                        String?
  location                           String?                              @db.VarChar(255)
  latitude                           Float?
  longitude                          Float?
  date                               DateTime?                            @db.Timestamp(6)
  photos                             String[]                             @db.VarChar(255)
  event_subject_matter_experts       event_subject_matter_experts[]
  event_topic_subject_matter_experts event_topic_subject_matter_experts[]
  testimonies                        testimonies[]
}

model locations {
  id                      String  @id @db.VarChar(255)
  name                    String? @db.VarChar(255)
  coordinates             String? @db.VarChar(255)
  google_maps_location_id String?
  city                    String? @db.VarChar(255)
  state                   String? @db.VarChar(255)
  latitude                Float?
  longitude               Float?
}

model organization_members {
  id            String         @id @db.VarChar(255)
  member        String?        @db.VarChar(255)
  organization  String?        @db.VarChar(255)
  personnel     personnel?     @relation(fields: [member], references: [id], onDelete: NoAction, onUpdate: NoAction)
  organizations organizations? @relation(fields: [organization], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model organizations {
  id                   String                 @id @db.VarChar(255)
  name                 String?                @db.VarChar(255)
  specialization       String?                @db.VarChar(255)
  description          String?
  photo                String?
  image                String?                @db.VarChar(255)
  organization_members organization_members[]
  testimonies          testimonies[]
}

model personnel {
  id                                 String                               @id @db.VarChar(255)
  bio                                String?
  role                               String?                              @db.VarChar(255)
  facebook                           String?                              @db.VarChar(255)
  twitter                            String?                              @db.VarChar(255)
  website                            String?                              @db.VarChar(255)
  instagram                          String?                              @db.VarChar(255)
  photo                              String[]                             @db.VarChar(255)
  rank                               Int?
  credibility                        Int?
  popularity                         Int?
  name                               String?                              @unique @db.VarChar(255)
  event_subject_matter_experts       event_subject_matter_experts[]
  event_topic_subject_matter_experts event_topic_subject_matter_experts[]
  organization_members               organization_members[]
  testimonies                        testimonies[]
  topic_subject_matter_experts       topic_subject_matter_experts[]
}

model sightings {
  id                 String    @id @db.VarChar(255)
  date               DateTime? @db.Timestamp(6)
  description        String?   @db.VarChar(255)
  media_link         String?   @db.VarChar(255)
  city               String?   @db.VarChar(255)
  state              String?   @db.VarChar(255)
  country            String?   @db.VarChar(255)
  shape              String?   @db.VarChar(255)
  duration_seconds   String?   @db.VarChar(255)
  duration_hours_min String?   @db.VarChar(255)
  comments           String?   @db.VarChar(255)
  date_posted        DateTime? @db.Timestamp(6)
  latitude           Float?
  longitude          Float?
}

model testimonies {
  id                 String               @id @db.VarChar(255)
  claim              String?
  event              String?              @db.VarChar(255)
  summary            String?
  witness            String?              @db.VarChar(255)
  documentation      String[]             @db.VarChar(255)
  date               DateTime?            @db.Timestamp(6)
  organization       String?              @db.VarChar(255)
  events             events?              @relation(fields: [event], references: [id], onDelete: NoAction, onUpdate: NoAction)
  organizations      organizations?       @relation(fields: [organization], references: [id], onDelete: NoAction, onUpdate: NoAction)
  personnel          personnel?           @relation(fields: [witness], references: [id], onDelete: NoAction, onUpdate: NoAction)
  topics_testimonies topics_testimonies[]
}

model topic_subject_matter_experts {
  id                    String     @id @db.VarChar(255)
  topic                 String?    @db.VarChar(255)
  subject_matter_expert String?    @db.VarChar(255)
  personnel             personnel? @relation(fields: [subject_matter_expert], references: [id], onDelete: NoAction, onUpdate: NoAction)
  topics                topics?    @relation(fields: [topic], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model topics {
  id                                 String                               @id @db.VarChar(255)
  name                               String?                              @db.VarChar(255)
  summary                            String?
  photo                              String?                              @db.VarChar(255)
  event_topic_subject_matter_experts event_topic_subject_matter_experts[]
  topic_subject_matter_experts       topic_subject_matter_experts[]
  topics_testimonies                 topics_testimonies[]
}

model topics_testimonies {
  id          String       @id @db.VarChar(255)
  topic       String?      @db.VarChar(255)
  testimony   String?      @db.VarChar(255)
  testimonies testimonies? @relation(fields: [testimony], references: [id], onDelete: NoAction, onUpdate: NoAction)
  topics      topics?      @relation(fields: [topic], references: [id], onDelete: NoAction, onUpdate: NoAction)
}
